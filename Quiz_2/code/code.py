# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DArU7d2IdiKOg3qkuHRvY8TELkU_kwBk
"""

!pip install lcapy

import lcapy
from lcapy import z

X_z = (2*z)+(5)-(4*(1/z))-(3*(1/z**2))

# Calculating Inverse Z Transform of X_z
X_n = X_z.IZT()

print("x[n] = ",X_n)

print("\nThis is the calculated Theory value of x[n]")

import numpy as np
import matplotlib.pyplot as plt

numbers = np.linspace(-6, 6, num = 13)

#plots

# Unit Impulse Function
def unit_impulse(a, n):
    if n == a:
        return 1
    else:
        return 0

x_n=[]

def x(n):
    return 5*(unit_impulse(0,n)) - 3*(unit_impulse(0,n - 2)) - 4*(unit_impulse(0,n - 1)) + 2*(unit_impulse(0,n + 1))
 
for i in numbers:
  x_n.append(x(i))

plt.stem(numbers, x_n, use_line_collection=True)

plt.title('x[n]')

plt.xlabel('$n$')

plt.ylabel('$x(n)$')

plt.grid()

plt.show()

print("\n")
print(numbers)
print(x_n)